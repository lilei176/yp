{"remainingRequest":"C:\\xampp\\htdocs\\LL\\vue-UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\LL\\vue-UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\LL\\vue-UI\\vue_app_00\\src\\components\\xz\\common\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\LL\\vue-UI\\vue_app_00\\src\\components\\xz\\common\\Cart.vue","mtime":1559267079974},{"path":"C:\\xampp\\htdocs\\LL\\vue-UI\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\LL\\vue-UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\LL\\vue-UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      bool: \"\"\n    };\n  },\n  methods: {\n    load: function load() {\n      var _this = this;\n\n      //加载购物车数据\n      //创建url \n      //发送ajax请求\n      //获取服务器购物车数据\n      //保存 \n      this.axios.get(\"cart\").then(function (result) {\n        //1.获取数组\n        //2.创建循环为数组中元素添加cb属性\n        //3.将修改后的数据赋值给list\n        var arr = result.data.data;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var elem = _step.value;\n            elem.cb = false;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.list = arr; //this.list=result.data.data;\n      });\n    },\n    delitem: function delitem(e) {\n      var _this2 = this;\n\n      //删除购物车中指定商品 \n      //获取当前商品id\n      this.$messagebox({\n        title: \"消息\",\n        message: \"是否删除该商品\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        //console.log(result);\n        if (result == \"cancel\") {\n          return;\n        } else {\n          var id = e.target.dataset.id; //发送ajax请求\n\n          _this2.axios.get(\"del\", {\n            params: {\n              id: id\n            }\n          }).then(function (result) {\n            _this2.$toast(result.data.msg);\n\n            _this2.load(); //刷新 \n\n          });\n        }\n      });\n    },\n    selectAll: function selectAll(e) {\n      //获取当前全选按钮状态\n      //this.bool=e.target.checked;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var elem = _step2.value;\n          elem.cb = e.target.checked;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    delAll: function delAll(e) {\n      //清空购物车中所有商品\n      //创建变量保存空字符串\n      //循环遍历数组\n      //获取当前id  拼接字符串\n      //发送ajax请求获取数据\n      var str = \"\";\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var elem = _step3.value;\n          str += elem.id + \",\";\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (str.length == 0) {\n        this.$messagebox(\"提示\", \"请选中要删除的数据\");\n        return;\n      }\n\n      str = str.substring(0, str.length - 1);\n      this.del(str);\n    },\n    delchecked: function delchecked() {\n      //删除选中\n      var str = \"\";\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var elem = _step4.value;\n\n          if (elem.cb == true) {\n            str += elem.id + \",\";\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (str.length == 0) {\n        this.$messagebox(\"提示\", \"请选中要删除的数据\");\n        return;\n      }\n\n      str = str.substring(0, str.length - 1);\n      this.del(str);\n    },\n    del: function del(str) {\n      var _this3 = this;\n\n      this.$messagebox({\n        title: \"消息\",\n        message: \"是否删除选中商品\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        //console.log(result);\n        if (result == \"cancel\") {\n          return;\n        } else {\n          //发送ajax请求\n          _this3.axios.get(\"delall\", {\n            params: {\n              str: str\n            }\n          }).then(function (result) {\n            _this3.$toast(result.msg);\n\n            _this3.load(); //刷新 \n\n          });\n        }\n      });\n    },\n    checkeditem: function checkeditem(e) {\n      var n = 0;\n\n      if (e.target.checked == false) {\n        this.bool = false;\n      } else {\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = this.list[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var elem = _step5.value;\n\n            //console.log(elem);\n            if (elem.cb == true) {\n              n++; //console.log(n)\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        if (n == this.list.length - 1) {\n          this.bool = true;\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.load();\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"cart\">\r\n    <!-- 全选按钮 -->\r\n    <div class=\"selectAll\">\r\n      \r\n      <input type=\"checkbox\" @change=\"selectAll\" v-model=\"bool\">全选\r\n    </div>\r\n    <!-- 购物车商品信息 -->\r\n    <div class=\"cart-item\" v-for=\"(elem,i) of list\" :key=\"i\" >\r\n      <div class=\"leftImgTxt\" >\r\n         <input type=\"checkbox\" v-model=\"elem.cb\" @click=\"checkeditem\" > <!--:checked=\"bool\" -->\r\n        <img :src=\"`http://127.0.0.1:3000/${elem.img}`\" alt=\"\">\r\n        <div class=\"rightImg\">\r\n          <span>{{elem.price}}</span>\r\n          <span>{{elem.count}}</span>\r\n          <span>{{elem.title}}</span>\r\n          <!-- <div> \r\n            <mt-button>-</mt-button>\r\n            <span>1</span>\r\n            <mt-button>+</mt-button>\r\n          </div>-->\r\n        </div>\r\n      </div>\r\n      <mt-button @click=\"delitem\" :data-id=\"elem.id\">删除</mt-button>\r\n    </div>\r\n    <!-- 删除选中商品 -->\r\n    <div class=\"delAll\">\r\n      <mt-button @click=\"delchecked\">删除选中商品</mt-button>\r\n      <mt-button @click=\"delAll\">清空购物车</mt-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return{\r\n      list:[],\r\n      bool:\"\"\r\n    }\r\n  },\r\n  methods:{\r\n    load(){\r\n      //加载购物车数据\r\n      //创建url \r\n      //发送ajax请求\r\n      //获取服务器购物车数据\r\n      //保存 \r\n      this.axios.get(\"cart\").then(result=>{\r\n        //1.获取数组\r\n        //2.创建循环为数组中元素添加cb属性\r\n        //3.将修改后的数据赋值给list\r\n        var arr=result.data.data\r\n        for(var elem of arr){\r\n          elem.cb=false;\r\n        }\r\n        this.list=arr;\r\n        //this.list=result.data.data;\r\n      })\r\n    },\r\n    delitem(e){    //删除购物车中指定商品 \r\n      //获取当前商品id\r\n      this.$messagebox({\r\n        title:\"消息\",\r\n        message:\"是否删除该商品\",\r\n        showConfirmButton:true,\r\n        showCancelButton:true\r\n      }).then(result=>{\r\n        //console.log(result);\r\n        if(result==\"cancel\"){\r\n          return;\r\n        }else{\r\n\r\n          var id=e.target.dataset.id\r\n      //发送ajax请求\r\n          this.axios.get(\"del\",{params:{id}}).then(result=>{\r\n          this.$toast(result.data.msg);\r\n          this.load();\r\n      //刷新 \r\n      }) \r\n      }  \r\n      })\r\n    },\r\n    selectAll(e){\r\n      //获取当前全选按钮状态\r\n      //this.bool=e.target.checked;\r\n      for(var elem of this.list){\r\n        elem.cb=e.target.checked;\r\n      } \r\n    },\r\n    delAll(e){\r\n      //清空购物车中所有商品\r\n      //创建变量保存空字符串\r\n      //循环遍历数组\r\n      //获取当前id  拼接字符串\r\n      //发送ajax请求获取数据\r\n      var str=\"\";\r\n      for(var elem of this.list){\r\n        str+=elem.id+\",\";\r\n      }\r\n      if(str.length==0){\r\n        this.$messagebox(\"提示\",\"请选中要删除的数据\");\r\n        return;\r\n      }\r\n      str=str.substring(0,str.length-1);\r\n      this.del(str)\r\n     \r\n      },\r\n      delchecked(){      //删除选中\r\n        var str=\"\";\r\n        for(var elem of this.list){   \r\n          if( elem.cb==true){\r\n            str+=elem.id+\",\"\r\n          }\r\n        }\r\n        if(str.length==0){\r\n        this.$messagebox(\"提示\",\"请选中要删除的数据\");\r\n        return;\r\n      }\r\n        str=str.substring(0,str.length-1);\r\n         this.del(str)\r\n      },\r\n      del(str){\r\n        this.$messagebox({\r\n        title:\"消息\",\r\n        message:\"是否删除选中商品\",\r\n        showConfirmButton:true,\r\n        showCancelButton:true\r\n      }).then(result=>{\r\n        //console.log(result);\r\n        if(result==\"cancel\"){\r\n          return;\r\n        }else{\r\n      //发送ajax请求\r\n          this.axios.get(\"delall\",{params:{str}}).then(result=>{\r\n          this.$toast(result.msg);\r\n          this.load();\r\n      //刷新 \r\n      }) \r\n      }  \r\n      })\r\n      },\r\n      checkeditem(e){\r\n        var n=0;\r\n        if(e.target.checked==false){\r\n          this.bool=false;\r\n        }else{\r\n          for(var elem of this.list){\r\n            //console.log(elem);\r\n              if(elem.cb==true){\r\n                n++;\r\n                //console.log(n)\r\n              }      \r\n          } \r\n          if(n==this.list.length-1){\r\n            this.bool=true;\r\n          }\r\n        }\r\n      }\r\n    \r\n  },\r\n  created(){\r\n    this.load();  \r\n  },\r\n  \r\n}\r\n</script>\r\n<style>\r\n  .cart-item{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .leftImgTxt{\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .leftImgTxt>img{\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n  .rightImg{\r\n    display: flex;\r\n    margin-left: 30px;\r\n   align-items: center;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src\\components\\xz\\common"}]}